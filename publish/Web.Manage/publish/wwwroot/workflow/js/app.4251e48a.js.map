{"version":3,"file":"js/app.4251e48a.js","mappings":"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","sources":["webpack://workflow/./src/components/WorkFlow.vue","webpack://workflow/./src/common/API.js","webpack://workflow/./src/common/Tools.js","webpack://workflow/./src/components/ToolIcon.vue","webpack://workflow/./src/components/ToolBox.vue","webpack://workflow/./src/components/ToolBox.vue?16f5","webpack://workflow/./src/components/WorkFlowInfo.vue","webpack://workflow/./src/components/WorkFlowInfo.vue?3b82","webpack://workflow/./src/components/WorkFlowData.vue","webpack://workflow/./src/components/WorkFlowData.vue?0f79","webpack://workflow/./src/components/SliderInput.vue","webpack://workflow/./src/components/SliderInput.vue?acb5","webpack://workflow/./src/components/InputVariables.vue","webpack://workflow/./src/components/InputVariables.vue?c09c","webpack://workflow/./src/components/Node/LargeModelNode.vue","webpack://workflow/./src/components/Node/LargeModelNode.vue?1493","webpack://workflow/./src/components/Node/PluginsNode.vue","webpack://workflow/./src/components/Node/PluginsNode.vue?2011","webpack://workflow/./src/components/Node/StartNode.vue","webpack://workflow/./src/components/Node/StartNode.vue?6c70","webpack://workflow/./src/components/Node/EndNode.vue","webpack://workflow/./src/components/Node/EndNode.vue?5dfb","webpack://workflow/./src/components/Node/SelectorNode.vue","webpack://workflow/./src/components/Node/SelectorNode.vue?de46","webpack://workflow/./src/components/Node/KnowledgeBaseNode.vue","webpack://workflow/./src/components/Node/KnowledgeBaseNode.vue?17c1","webpack://workflow/./src/components/Node/AgentStartNode.vue","webpack://workflow/./src/components/Node/AgentStartNode.vue?e8de","webpack://workflow/./src/components/Node/AgentEndNode.vue","webpack://workflow/./src/components/Node/AgentEndNode.vue?2884","webpack://workflow/./src/components/Node/TimeTrigger.vue","webpack://workflow/./src/components/Node/TimeTrigger.vue?76d8","webpack://workflow/./src/components/Node/AgentNode.vue","webpack://workflow/./src/components/Node/AgentNode.vue?26d7","webpack://workflow/./src/components/Node/MainAINode.vue","webpack://workflow/./src/components/Node/MainAINode.vue?4834","webpack://workflow/./src/components/Node/ReporterNode.vue","webpack://workflow/./src/components/Node/ReporterNode.vue?aa9d","webpack://workflow/./src/components/Edge/CustomEdge.vue","webpack://workflow/./src/components/Edge/CustomEdge.vue?d17b","webpack://workflow/./src/components/WorkFlow.vue?9fb6","webpack://workflow/./src/App.vue","webpack://workflow/./src/App.vue?7ccd","webpack://workflow/./src/directives/stopPropagation.js","webpack://workflow/./src/components/common/StopPropagationSelect.vue","webpack://workflow/./src/components/common/StopPropagationSelect.vue?76ca","webpack://workflow/./src/main.js","webpack://workflow/webpack/bootstrap","webpack://workflow/webpack/runtime/chunk loaded","webpack://workflow/webpack/runtime/compat get default export","webpack://workflow/webpack/runtime/define property getters","webpack://workflow/webpack/runtime/global","webpack://workflow/webpack/runtime/hasOwnProperty shorthand","webpack://workflow/webpack/runtime/make namespace object","webpack://workflow/webpack/runtime/jsonp chunk loading","webpack://workflow/webpack/startup"],"sourcesContent":["<script>\nimport { ref } from \"vue\";\nimport { VueFlow, useVueFlow, MarkerType } from \"@vue-flow/core\";\nimport { Background } from \"@vue-flow/background\";\nimport { ControlButton, Controls } from \"@vue-flow/controls\";\nimport { MiniMap } from \"@vue-flow/minimap\";\n\nimport Api from \"../common/API.js\";\nimport Tools from \"../common/Tools.js\";\nimport ToolIcon from \"./ToolIcon.vue\";\nimport ToolBox from \"./ToolBox.vue\";\nimport WorkFlowInfo from \"./WorkFlowInfo.vue\";\nimport WorkFlowData from \"./WorkFlowData.vue\";\nimport LargeModelNode from \"./Node/LargeModelNode.vue\";\nimport PluginsNode from \"./Node/PluginsNode.vue\";\nimport StartNode from \"./Node/StartNode.vue\";\nimport EndNode from \"./Node/EndNode.vue\";\nimport SelectorNode from \"./Node/SelectorNode.vue\";\nimport KnowledgeBaseNode from \"./Node/KnowledgeBaseNode.vue\";\n\nimport AgentStartNode from \"./Node/AgentStartNode.vue\";\nimport AgentEndNode from \"./Node/AgentEndNode.vue\";\n\nimport TimeTrigger from \"./Node/TimeTrigger.vue\";\nimport AgentNode from \"./Node/AgentNode.vue\";\nimport MainAINode from \"./Node/MainAINode.vue\";\nimport ReporterNode from \"./Node/ReporterNode.vue\";\n\nimport CustomEdge from \"./Edge/CustomEdge.vue\";\nimport { notify } from \"@kyvg/vue3-notification\";\n\nvar workflow = null;\n\nexport default {\n  name: \"WorkFlow\",\n  props: {\n    baseURL: String,\n    workflow_data: {\n      title: \"智能助理\",\n      info: null,\n      WorkFlowID: \"\",\n      MainID: \"\",\n      MainType: 2,\n    },\n  },\n  components: {\n    VueFlow,\n    Background,\n    MiniMap,\n    ToolBox,\n    WorkFlowInfo,\n    Controls,\n    ToolIcon,\n    ControlButton,\n    WorkFlowData,\n    LargeModelNode,\n    PluginsNode,\n    StartNode,\n    EndNode,\n    AgentStartNode,\n    AgentEndNode,\n    SelectorNode,\n    TimeTrigger,\n    AgentNode,\n    MainAINode,\n    ReporterNode,\n    CustomEdge,\n    KnowledgeBaseNode,\n  },\n  setup() {\n    const {\n      onInit,\n      onNodeDragStop,\n      onConnect,\n      addEdges,\n      setViewport,\n      toObject,\n      onNodesChange,\n      applyNodeChanges,\n      onEdgesChange,\n      applyEdgeChanges,\n    } = useVueFlow();\n\n    onInit((vueFlowInstance) => {\n      vueFlowInstance.fitView();\n    });\n    onNodeDragStop(() => {\n      workflow.nodes = toObject().nodes;\n    });\n\n    onConnect((connection) => {\n      connection.id = Tools.guid();\n      connection.markerEnd = MarkerType.ArrowClosed;\n      connection.style = \"stroke-width: 3;stroke:#3e47de;\";\n      \n      // 获取源节点和目标节点\n      const sourceNode = workflow.nodes.find(node => node.id === connection.source);\n      const targetNode = workflow.nodes.find(node => node.id === connection.target);\n      \n      // 如果源节点有output数据，将其传递给目标节点的sourceNodes\n      if (sourceNode?.data?.output) {\n        if (!targetNode.data.sourceNodes) {\n          targetNode.data.sourceNodes = {};\n        }\n        // 为每个输出变量生成唯一ID和显示文本\n        const outputWithIds = sourceNode.data.output.map(out => ({\n          ...out,\n          id: out.sourceId || `${sourceNode.id}_${out.varname}`,  // 优先使用已有的sourceId\n          displayText: out.displayText || out.varname  // 优先使用已有的displayText\n        }));\n\n        targetNode.data.sourceNodes[sourceNode.id] = {\n          nodeId: sourceNode.id,\n          label: sourceNode.data.label,\n          output: outputWithIds\n        };\n      }\n\n      addEdges(connection);\n      workflow.edges = toObject().edges;\n    });\n\n    onNodesChange((changes) => {\n      const nextChanges = [];\n      for (const change of changes) {\n        if (change.type === \"remove\") {\n          var node = workflow.nodes.filter((item) => item.id === change.id);\n          if (node.length > 0) {\n            if (node[0].type === \"Start\" || node[0].type === \"AgentStart\") {\n              notify({ type: \"warn\", title: \"开始节点不能删除\" });\n              continue;\n            } else if (node[0].type === \"End\" || node[0].type === \"AgentEnd\") {\n              notify({ type: \"warn\", title: \"结束节点不能删除\" });\n              continue;\n            } else if (node[0].type === \"MainAI\") {\n              notify({ type: \"warn\", title: \"应用用主控AI不能删除\" });\n              continue;\n            } else if (node[0].type === \"Reporter\") {\n              notify({ type: \"warn\", title: \"应用记录员不能删除\" });\n              continue;\n            } else {\n              nextChanges.push(change);\n            }\n          }\n        } else {\n          nextChanges.push(change);\n        }\n      }\n      applyNodeChanges(nextChanges);\n    });\n\n    onEdgesChange((changes) => {\n      const nextChanges = [];\n      for (const change of changes) {\n        if (change.type === \"remove\") {\n          if (workflow.selectedNode) {\n            continue;\n          } else {\n            // 在删除边时，找到相关的节点并清理数据\n            const edge = workflow.edges.find(e => e.id === change.id);\n            if (edge) {\n              const targetNode = workflow.nodes.find(node => node.id === edge.target);\n              if (targetNode?.data?.sourceNodes) {\n                delete targetNode.data.sourceNodes[edge.source];\n              }\n            }\n            nextChanges.push(change);\n          }\n        } else {\n          nextChanges.push(change);\n        }\n      }\n      applyEdgeChanges(nextChanges);\n    });\n\n    const _setViewport = ref(setViewport);\n    const _toObject = ref(toObject);\n    return { _setViewport, _toObject };\n  },\n  mounted() {\n    let _this = this;\n    this.init();\n    this.startInterval();\n    workflow = _this;\n  },\n  unmount() {\n    this.stopInterval();\n  },\n  data() {\n    return {\n      ShowNodeBox: false,\n      workflow: { title: this.workflow_data.title, info: this.workflow_data.info },\n      info: {},\n      pluginsList: [], //ref(Plugins),\n      largeModelList: [], // ref(LargeModel),\n      knowledgeBaseList: [], // ref(KnowledgeBase),\n      agentList: [], // ref(Agent),\n      nodes: [], // ref(initialNodes),\n      edges: [], // ref(initialEdges),\n      dark: ref(false),\n      selectedNode: null,\n      selectEdge: null,\n      connectionLineStyle: {\n        stroke: \"#ddd\",\n        strokeWidth: 3,\n      },\n\n      intervalId: null,\n    };\n  },\n  methods: {\n    logToObject() {\n      this.save();\n    },\n    resetTransform() {\n      this._setViewport({ x: 0, y: 0, zoom: 1 });\n    },\n    onShowNodeBox() {\n      this.ShowNodeBox = !this.ShowNodeBox;\n    },\n    toggleDarkMode() {\n      this.dark = !this.dark;\n    },\n    addNode(nodeObj) {\n      //console.log(nodeObj);\n      this.nodes.push(nodeObj);\n    },\n    saveNode(nodeObj) {\n      this.nodes = this.nodes.map((item) => {\n        if (item.id == nodeObj.id) {\n          // 使用Object.assign合并数据，保留原有状态\n          item.data = Object.assign({}, item.data, nodeObj.data);\n        }\n        return item;\n      });\n    },\n    nodeClick(node) {\n      this.selectedNode = node;\n      this.selectEdge = null;\n    },\n    edgeClick(edge) {\n      this.selectedNode = null;\n      this.selectEdge = edge;\n    },\n    startInterval() {\n      this.intervalId = setInterval(this.save, 5000);\n    },\n    stopInterval() {\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n      }\n    },\n    async init() {\n      Api.getBaseConfig()\n        .then((res) => {\n          console.log(res);\n          if (res.Status) {\n            var Data = res.Data;\n            this.largeModelList = ref(Data.largeModelList);\n            this.pluginsList = Data.pluginsList;\n            this.agentList = Data.agentList;\n            this.knowledgeBaseList = Data.knowledgeBaseList;\n          }\n          this.getWorkFlow();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    getWorkFlow() {\n      var that = this;\n      Api.getWorkFlow(\n        that.workflow_data.WorkFlowID,\n        that.workflow_data.MainID,\n        that.workflow_data.MainType\n      )\n        .then((res) => {\n          if (res.Status) {\n            var Data = res.Data;\n\n            this.info = Object.assign({}, this.info, Data.Info);\n\n            Data.Nodes.map((x) => {\n              this.nodes.push(x.Config);\n            });\n            Data.Edges.map((x) => {\n              this.edges.push(x.Config);\n            });\n\n            this.$forceUpdate();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    save(info = null) {\n      var that = this;\n\n      var _WorkFlowID = that.workflow_data.WorkFlowID;\n      var _Info = that.info;\n      if (info != null) {\n        _Info.WorkflowName = info.WorkflowName;\n        _Info.Description = info.Description;\n      }\n\n      var _Nodes = this._toObject().nodes.map((item) => {\n        return {\n          NodeID: item.id,\n          WorkFlowID: _WorkFlowID,\n          NodeType: item.type,\n          NodeName: item.data.label,\n          Description: item.data.label,\n          Config: item,\n        };\n      });\n      var _Edges = this._toObject().edges.map((item) => {\n        return {\n          EdgeID: item.id,\n          WorkFlowID: _WorkFlowID,\n          SourceNodeId: item.source,\n          TargetNodeId: item.target,\n          Condition: \"\",\n          LName: \"\",\n          Config: item,\n        };\n      });\n      var _data = {\n        Info: _Info,\n        Nodes: _Nodes,\n        Edges: _Edges,\n        WorkFlowID: _WorkFlowID,\n        MainID: that.workflow_data.MainID,\n        MainType: that.workflow_data.MainType,\n      };\n\n      Api.subWorkFlow(_data)\n        .then((res) => {\n          //console.log(res);\n          if (res.Status) {\n            that.workflow_data.WorkFlowID = res.Data;\n            that.info.LastUpdateTime = new Date().toLocaleString();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n};\n</script>\n\n<template>\n  <VueFlow\n    ref=\"vueFlow\"\n    :nodes=\"nodes\"\n    :edges=\"edges\"\n    :class=\"{ dark }\"\n    class=\"basic-flow\"\n    :default-viewport=\"{ zoom: 1.5 }\"\n    :min-zoom=\"0.2\"\n    :max-zoom=\"4\"\n    :apply-default=\"false\"\n    fit-view-on-init\n    @nodes-change=\"onNodesChange\"\n    @edges-change=\"onEdgesChange\"\n    @edgeClick=\"edgeClick\"\n    @nodeClick=\"nodeClick\"\n    :connection-line-style=\"connectionLineStyle\"\n  >\n    <Background pattern-color=\"#f0f0f0\" :gap=\"15\" />\n    <WorkFlowData class=\"vue-flow__panel top left\"></WorkFlowData>\n    <MiniMap position=\"bottom-left\" class=\"MiniMap\"></MiniMap>\n    <Controls position=\"bottom-left\">\n      <ControlButton title=\"Reset Transform\" @click=\"resetTransform\">\n        <ToolIcon name=\"reset\" />\n      </ControlButton>\n\n      <ControlButton title=\"Toggle Dark Mode\" @click=\"toggleDarkMode\">\n        <ToolIcon v-if=\"dark\" name=\"sun\" />\n        <ToolIcon v-else name=\"moon\" />\n      </ControlButton>\n\n      <ControlButton title=\"Log `toObject`\" @click=\"logToObject\">\n        <ToolIcon name=\"log\" />\n      </ControlButton>\n    </Controls>\n    <Panel class=\"WorkFlowInfo vue-flow__panel top left vue-flow__controls\">\n      <WorkFlowInfo v-model:info=\"info\" @save=\"save\"> </WorkFlowInfo>\n    </Panel>\n\n    <Panel class=\"ToolBox vue-flow__panel top left vue-flow__controls\">\n      <ToolBox\n        :is-visible=\"ShowNodeBox\"\n        :workflow-i-d=\"workflow_data.WorkFlowID\"\n        :main-i-d=\"workflow_data.MainID\"\n        :nodeClass=\"workflow_data.MainType\"\n        @addNode=\"addNode\"\n      ></ToolBox>\n      <ControlButton @click=\"onShowNodeBox\">\n        <ToolIcon v-if=\"!ShowNodeBox\" name=\"zoomin\" />\n        <ToolIcon v-else name=\"zoomout\" />\n      </ControlButton>\n    </Panel>\n\n    <template #edge-custom=\"props\">\n      <CustomEdge\n        :id=\"props.id\"\n        :source-x=\"props.sourceX\"\n        :source-y=\"props.sourceY\"\n        :target-x=\"props.targetX\"\n        :target-y=\"props.targetY\"\n        :source-position=\"props.sourcePosition\"\n        :target-position=\"props.targetPosition\"\n        :data=\"props.data\"\n        :marker-end=\"props.markerEnd\"\n        :style=\"props.style\"\n      />\n    </template>\n\n    <template #node-Start=\"props\">\n      <StartNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></StartNode>\n    </template>\n    <template #node-End=\"props\">\n      <EndNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></EndNode>\n    </template>\n\n    <template #node-AgentStart=\"props\">\n      <AgentStartNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></AgentStartNode>\n    </template>\n    <template #node-AgentEnd=\"props\">\n      <AgentEndNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></AgentEndNode>\n    </template>\n\n    <template #node-LargeModel=\"props\">\n      <LargeModelNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :largeModel=\"largeModelList\"\n        :plugins=\"pluginsList\"\n        @saveNode=\"saveNode\"\n      ></LargeModelNode>\n    </template>\n    <template #node-KnowledgeBase=\"props\">\n      <KnowledgeBaseNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :largeModel=\"largeModelList\"\n        :knowledgeBase=\"knowledgeBaseList\"\n        @saveNode=\"saveNode\"\n      ></KnowledgeBaseNode>\n    </template>\n    <template #node-Plugins=\"props\">\n      <PluginsNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :plugins=\"pluginsList\"\n        @saveNode=\"saveNode\"\n      ></PluginsNode>\n    </template>\n    <template #node-Selector=\"props\">\n      <SelectorNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></SelectorNode>\n    </template>\n\n    <template #node-TimeTrigger=\"props\">\n      <TimeTrigger\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        @saveNode=\"saveNode\"\n      ></TimeTrigger>\n    </template>\n\n    <template #node-MainAI=\"props\">\n      <MainAINode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :largeModel=\"largeModelList\"\n        :plugins=\"pluginsList\"\n        @saveNode=\"saveNode\"\n      ></MainAINode>\n    </template>\n\n    <template #node-Agent=\"props\">\n      <AgentNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :agents=\"agentList\"\n        @saveNode=\"saveNode\"\n      ></AgentNode>\n    </template>\n\n    <template #node-Reporter=\"props\">\n      <ReporterNode\n        :id=\"props.id\"\n        :data=\"props.data\"\n        :isSelected=\"props.selected\"\n        :largeModel=\"largeModelList\"\n        @saveNode=\"saveNode\"\n      ></ReporterNode>\n    </template>\n  </VueFlow>\n</template>\n","import axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: \"/\", //http://192.168.0.26:5002\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nclass ApiService {\n  static get(url) {\n    return apiClient.get(url).then((response) => response.data);\n  }\n\n  static post(url, data, config) {\n    return apiClient.post(url, data, config).then((response) => response.data);\n  }\n\n  static put(url, data) {\n    return apiClient.put(url, data).then((response) => response.data);\n  }\n\n  static delete(url) {\n    return apiClient.delete(url).then(() => true);\n  }\n\n  static getBaseConfig() {\n    return this.get(\"/Manage/Workflow/getBaseConfig\");\n  }\n\n  static getWorkFlow(WorkflowID, MainID, MainType) {\n    return this.post(\n      \"/Manage/Workflow/getWorkFlow\",\n      {\n        WorkflowID,\n        MainID,\n        MainType,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\", // 设置请求头，确保服务器正确解析 FormData\n        },\n      }\n    );\n  }\n\n  static addNode(NodeType, WorkflowID, MainID) {\n    return this.post(\n      \"/Manage/Workflow/addNode\",\n      {\n        WorkflowID,\n        NodeType,\n        MainID,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\", // 设置请求头，确保服务器正确解析 FormData\n        },\n      }\n    );\n  }\n\n  static subWorkFlow(Data) {\n    return this.post(\"/Manage/Workflow/Save\", Data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n  static getNodeExcutionRecord(workflowID, nodeID) {\n    return this.post(\"getNodeExcutionRecord\", { workflowID, nodeID });\n  }\n\n  static getChatLog(ChatSessionID) {\n    return this.post(\"getChatLog\", { ChatSessionID });\n  }\n}\n\nexport default ApiService;\n","class Tools {\n  static guid = function () {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n      /[xy]/g,\n      function (c) {\n        var r = (Math.random() * 16) | 0,\n          v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      }\n    );\n  };\n}\n\nexport default Tools;\n","import script from \"./ToolIcon.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToolIcon.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"isVisible\" class=\"NodeToolBox\">\n    <div class=\"title\">选择节点</div>\n    <div class=\"items iconfont\">\n      <ul>\n        <li\n          v-for=\"(item, i) in NodeList.filter(\n            (item) => item.NodeClass == (nodeClass == 1 ? 'App' : 'Agent')\n          )\"\n          :key=\"i\"\n          @click=\"addNode(item.NodeType)\"\n        >\n          <div class=\"Icon\" :class=\"item.Icon\"></div>\n          <div class=\"Name\">{{ item.NodeName }}</div>\n          <div class=\"Icon RBt icon-jinrujiantouxiao\"></div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script setup></script>\n\n<script>\nimport Api from \"../common/API.js\";\n\nimport { notify } from \"@kyvg/vue3-notification\";\n\nexport default {\n  name: \"ToolBox\",\n  props: {\n    node: Object,\n    workflowID: String,\n    mainID: String,\n    isVisible: Boolean,\n    nodeClass: Number,\n  },\n  data() {\n    return {\n      NodeList: [\n        {\n          NodeName: \"大模型\",\n          NodeType: \"LargeModel\",\n          Icon: \"icon-LargeModel\",\n          Description: \"调用大语言模型，处理变量，配合提示词，生成输出\",\n          NodeClass: \"Agent\",\n        },\n        {\n          NodeName: \"知识库\",\n          NodeType: \"KnowledgeBase\",\n          Icon: \"icon-KnowledgeBase\",\n          Description: \"根据输入的文本，调用知识库，获取知识库数据\",\n          NodeClass: \"Agent\",\n        },\n        {\n          NodeName: \"插件\",\n          NodeType: \"Plugins\",\n          Icon: \"icon-Plugins\",\n          Description: \"插件可以提供更多能力，外部操作，获取外部数据等\",\n          NodeClass: \"Agent\",\n        },\n        {\n          NodeName: \"选择器\",\n          NodeType: \"Selector\",\n          Icon: \"icon-selector1\",\n          Description: \"可以通过选择器的定义，链接多个下游执行节点\",\n          NodeClass: \"Agent\",\n        },\n        {\n          NodeName: \"Agent\",\n          NodeType: \"Agent\",\n          Icon: \"icon-Agent\",\n          Description: \"调用Agent可以实现更多复杂组合\",\n          NodeClass: \"App\",\n        },\n        {\n          NodeName: \"时间触发器\",\n          NodeType: \"TimeTrigger\",\n          Icon: \"icon-TimeTrigger\",\n          Description: \"可以定义一个特定时间点来触发下个节点\",\n          NodeClass: \"App\",\n        },\n        {\n          NodeName: \"选择器\",\n          NodeType: \"Selector\",\n          Icon: \"icon-selector1\",\n          Description: \"可以通过选择器的定义，链接多个下游执行节点\",\n          NodeClass: \"App\",\n        },{\n          NodeName: \"大模型\",\n          NodeType: \"LargeModel\",\n          Icon: \"icon-LargeModel\",\n          Description: \"调用大语言模型，处理变量，配合提示词，生成输出\",\n          NodeClass: \"App\",\n        },\n        /*\n        {\n          NodeName: \"主控AI\",\n          NodeType: \"MainAI\",\n          Icon: \"icon-MainAI\",\n          Description: \"主导应用的核心AI，可以调用多个Agent\",\n          NodeClass: \"App\",\n        },\n        {\n          NodeName: \"记录员\",\n          NodeType: \"Reporter\",\n          Icon: \"icon-Reporter\",\n          Description:\n            \"记录会话内容，并进行必要的摘要与整理，减少回话上下文长度，提高会话质量\",\n          NodeClass: \"App\",\n        },\n*/\n      ],\n    };\n  },\n  methods: {\n    addNode(NodeType) {\n      Api.addNode(NodeType, this.workflowID, this.mainID).then((res) => {\n        console.log(res);\n        if (res.Status) {\n          var Data = res.Data;\n\n          this.$emit(\"addNode\", Data.Config);\n        } else {\n          notify({ type: \"warn\", title: \"Warn\", text: res.ErrorDesc });\n        }\n      });\n    },\n  },\n};\n</script>\n","import { render } from \"./ToolBox.vue?vue&type=template&id=0f1e35b3\"\nimport script from \"./ToolBox.vue?vue&type=script&lang=js\"\nexport * from \"./ToolBox.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"WorkFlowInfo\" @click=\"toggleDialog\">\n    <div class=\"Title\">{{ info.WorkflowName }}</div>\n    <div class=\"LastUpdateTime\">{{ new Date(info.LastUpdateTime).toLocaleString() }}</div>\n  </div>\n\n  <el-dialog v-model=\"dialogFormVisible\" title=\"工作流信息\" width=\"500\">\n    <el-form :model=\"form\" label-width=\"auto\">\n      <el-form-item label=\"工作流名称\" label-position=\"right\">\n        <el-input v-model=\"Info.WorkflowName\" autocomplete=\"off\" />\n      </el-form-item>\n      <el-form-item label=\"说明\" label-position=\"right\">\n        <el-input\n          v-model=\"Info.Description\"\n          show-word-limit\n          maxlength=\"128\"\n          type=\"textarea\"\n        ></el-input>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button @click=\"closeDialog\">取消</el-button>\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from \"vue\";\n\nexport default {\n  name: \"WorkFlowInfo\",\n  props: {\n    node: Object,\n    workflowID: String,\n    isVisible: Boolean,\n    info: Object,\n  },\n  setup(props) {\n    const dialogFormVisible = ref(false);\n    const Info = ref({});\n\n    onMounted(() => {\n      Info.value = { ...props.info };\n    });\n    watch(\n      () => props.info,\n      (newInfo) => {\n        Info.value = { ...newInfo };\n      },\n      { immediate: true }\n    );\n    const toggleDialog = () => {\n      dialogFormVisible.value = !dialogFormVisible.value;\n    };\n\n    const closeDialog = () => {\n      dialogFormVisible.value = false;\n    };\n\n    return { dialogFormVisible, Info, toggleDialog, closeDialog };\n  },\n  methods: {\n    show() {\n      this.dialogFormVisible = !this.dialogFormVisible;\n    },\n    save() {\n      this.$emit(\"save\", this.Info);\n      this.dialogFormVisible = false;\n    },\n  },\n};\n</script>\n","import { render } from \"./WorkFlowInfo.vue?vue&type=template&id=34435240\"\nimport script from \"./WorkFlowInfo.vue?vue&type=script&lang=js\"\nexport * from \"./WorkFlowInfo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n<div class=\"WorkFlowData\">\n    <div class=\"title\">{{title}}</div>\n</div>\n</template>\n<script>\nexport default {\n  name: \"WorkFlowData\",\n  props: {\n    title: String,\n  },\n};\n</script>\n","import { render } from \"./WorkFlowData.vue?vue&type=template&id=e84c9d3e\"\nimport script from \"./WorkFlowData.vue?vue&type=script&lang=js\"\nexport * from \"./WorkFlowData.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"slider-input\">\n    <input\n      type=\"range\"\n      :min=\"min\"\n      :max=\"max\"\n      v-model=\"inputValue\"\n      @input=\"updateValue($event.target.value)\"\n      @mousedown.stop=\"handleRangeMouseDown\"\n    />\n    <span>{{ inputValue }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0,\n    },\n    min: {\n      type: Number,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n  },\n  setup() {\n    const handleRangeMouseDown = () => {\n      return;\n    };\n\n    return { handleRangeMouseDown };\n  },\n  data() {\n    return {\n      inputValue: this.modelValue,\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      this.inputValue = newValue;\n    },\n  },\n  methods: {\n    updateValue(value) {\n      this.inputValue = value;\n      this.$emit(\"update:modelValue\", value);\n    },\n  },\n};\n</script>\n\n<style>\n.slider-input{\nwidth: 100%;}\n.slider-input input {\n  width: 100%;\n}\n.slider-input span {\n  margin-left: 10px;\n}\n</style>\n","import { render } from \"./SliderInput.vue?vue&type=template&id=612dccbc\"\nimport script from \"./SliderInput.vue?vue&type=script&lang=js\"\nexport * from \"./SliderInput.vue?vue&type=script&lang=js\"\n\nimport \"./SliderInput.vue?vue&type=style&index=0&id=612dccbc&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- 输入变量选择组件 -->\n<template>\n  <div class=\"Inputs Content\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"toggleFold\"\n      ></span>\n      <span>输入变量</span>\n    </div>\n    <div v-if=\"isFold\">\n      <table>\n        <thead>\n          <th>变量名</th>\n          <th>类型</th>\n          <th>操作</th>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, i) in modelValue\" :key=\"i\">\n            <td>\n              <select \n                v-stop-propagation\n                v-model=\"item.sourceId\" \n                @change=\"onVarnameSelect(item, $event.target.value)\"\n                class=\"VarnameSelect\"\n              >\n                <option value=\"\" disabled>请选择变量名</option>\n                <optgroup \n                  v-for=\"(group, nodeId) in groupVarnamesBySource(i)\" \n                  :key=\"nodeId\"\n                  :label=\"group.label || nodeId\"\n                >\n                  <option \n                    v-for=\"varname in group.variables\" \n                    :key=\"varname.sourceId\" \n                    :value=\"varname.sourceId\"\n                  >\n                    {{ varname.displayText }}\n                  </option>\n                </optgroup>\n              </select>\n            </td>\n            <td>\n              <input v-stop-propagation type=\"text\" v-model=\"item.type\" readonly />\n            </td>\n            <td>\n              <span class=\"DeleteBtn\" @click=\"removeInput(i)\">×</span>\n              <span class=\"InsertBtn\" v-if=\"textarea && item.sourceId\" @click=\"insertToPrompt(item)\">→</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"AddBtn\" @click=\"addInput\">+</div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'InputVariables',\n  props: {\n    modelValue: {\n      type: Array,\n      default: () => []\n    },\n    sourceNodes: {\n      type: Object,\n      default: () => ({})\n    },\n    textarea: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['update:modelValue', 'save'],\n  data() {\n    return {\n      isFold: true\n    };\n  },\n  methods: {\n    toggleFold() {\n      this.isFold = !this.isFold;\n    },\n    getAvailableVarnames(currentIndex) {\n      const availableVarnames = [];\n      // 获取已使用的变量ID列表\n      const usedSourceIds = this.modelValue\n        .map((input, index) => (index !== currentIndex ? input.sourceId : null))\n        .filter(Boolean);\n\n      if (this.sourceNodes) {\n        // 遍历所有源节点\n        Object.entries(this.sourceNodes).forEach(([nodeId, source]) => {\n          if (source.output) {\n            source.output.forEach(output => {\n              // 使用源节点中的id\n              const sourceId = output.id;\n              // 如果变量ID未被使用\n              if (!usedSourceIds.includes(sourceId)) {\n                availableVarnames.push({\n                  varname: output.varname,\n                  displayText:output.displayText,\n                  nodeId: nodeId,\n                  label: source.label,\n                  sourceId: sourceId // 使用源节点中的id\n                });\n              }\n            });\n          }\n        });\n      }\n\n      // 按节点标签和变量名排序\n      return availableVarnames.sort((a, b) => {\n        const labelCompare = (a.label || a.nodeId).localeCompare(b.label || b.nodeId);\n        if (labelCompare !== 0) return labelCompare;\n        return a.varname.localeCompare(b.varname);\n      });\n    },\n    groupVarnamesBySource(currentIndex) {\n      const varnames = this.getAvailableVarnames(currentIndex);\n      const groups = {};\n      \n      varnames.forEach(varname => {\n        const key = varname.nodeId;\n        if (!groups[key]) {\n          groups[key] = {\n            label: varname.label,\n            variables: []\n          };\n        }\n        groups[key].variables.push({\n          ...varname,\n          displayText: varname.displayText || `${varname.varname} (${varname.label})`,\n          value: varname.sourceId\n        });\n      });\n      \n      return groups;\n    },\n    onVarnameSelect(item, selectedSourceId) {\n      \n      // 从所有可用变量中找到选中的变量\n      const allVarnames = this.getAvailableVarnames(\n        this.modelValue.findIndex(input => input === item)\n      );\n      const selectedVar = allVarnames.find(v => v.sourceId === selectedSourceId);\n      \n      if (selectedVar) {\n        item.varname = selectedVar.varname;\n        item.sourceId = selectedVar.sourceId;\n        item.type = 'string';  // 默认为字符串类型\n        item.txt = '';\n        this.$emit('save');\n      }\n      \n    },\n    addInput() {\n      const newInputs = [...this.modelValue, {\n        varname: '',\n        type: 'string',\n        txt: '',\n        sourceId: ''\n      }];\n      this.$emit('update:modelValue', newInputs);\n      this.$emit('save');\n    },\n    removeInput(index) {\n      const newInputs = [...this.modelValue];\n      newInputs.splice(index, 1);\n      \n      // 如果删除后没有输入变量了，添加一个空的\n      if (newInputs.length === 0) {\n        newInputs.push({\n          varname: '',\n          type: 'string',\n          txt: '',\n          sourceId: ''\n        });\n      }\n      \n      this.$emit('update:modelValue', newInputs);\n      this.$emit('save');\n    },\n    insertToPrompt(item) {\n      if (!item.sourceId || !this.textarea) return;\n      \n      const text = `{{${item.sourceId}}}`;\n      const textarea = this.textarea;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const value = textarea.value || '';\n      \n      // 计算新值\n      let newValue;\n      if (typeof start === 'number' && typeof end === 'number') {\n        // 在光标位置插入\n        newValue = value.substring(0, start) + text + value.substring(end);\n      } else {\n        // 追加到末尾\n        newValue = value + text;\n      }\n\n      // 更新值并触发input事件\n      textarea.value = newValue;\n      textarea.dispatchEvent(new Event('input', { bubbles: true }));\n      \n      // 更新光标位置并聚焦\n      textarea.focus();\n      if (typeof start === 'number') {\n        const newPosition = start + text.length;\n        textarea.setSelectionRange(newPosition, newPosition);\n      }\n    },\n  }\n};\n</script>\n","import { render } from \"./InputVariables.vue?vue&type=template&id=06aaf20b\"\nimport script from \"./InputVariables.vue?vue&type=script&lang=js\"\nexport * from \"./InputVariables.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport Multiselect from \"vue-multiselect\";\nimport SliderInput from \"../SliderInput.vue\";\nimport InputVariables from '../InputVariables.vue';\n</script>\n<script>\nexport default {\n  name: \"LargeModelNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    largeModel: Object,\n    plugins: Object,\n  },\n  components: { Multiselect, SliderInput,InputVariables },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: {\n        ...this.data,\n        model: this.data.model || {\n          LargeModelID: 0,\n          Name: \"\",\n          ModelName: \"\",\n          ModelKey: \"\",\n          MICON: \"\",\n          TypeCode: 0,\n          TypeName: \"\",\n          ModelOrganizationID: 0,\n          ModelOrganizationName: \"\",\n          EndPoint: \"\",\n          MConfig: \"\",\n          Description: \"\",\n          SystemStatus: 0\n        },\n        inputs: this.data.inputs || [{\n          varname: \"input\",\n          value: \"\",\n          type: \"string\",\n          txt: \"\"\n        }],\n        prompt: this.data.prompt || \"\",\n        temperature: this.data.temperature || 70,\n        topp: this.data.topp || 80,\n        output: this.data.output || [{\n          varname: \"results\",\n          value: \"\",\n          type: \"string\",\n          txt: \"\"\n        }],\n        SemanticFunction: this.data.SemanticFunction || [],\n        NativeFunction: this.data.NativeFunction || []\n      },\n      largeModelList: this.largeModel,\n      pluginsList: this.plugins,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n      isFold_largemodel: true,\n      isFold_plugins: true,\n      isFold_plugins2: true,\n      isFold_Coefficient: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    checkFoldLargeModel() {\n      this.isFold_largemodel = !this.isFold_largemodel;\n    },\n    checkFoldPlugins() {\n      this.isFold_plugins = !this.isFold_plugins;\n    },\n    checkFoldPlugins2() {\n      this.isFold_plugins2 = !this.isFold_plugins2;\n    },\n    checkCoefficient() {\n      this.isFold_Coefficient = !this.isFold_Coefficient;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n  watch: {\n    'data.sourceNodes': {\n      handler(newSourceNodes, oldSourceNodes) {\n        // 当sourceNodes发生变化时（比如删除连线）\n        if (oldSourceNodes) {\n          const removedNodeIds = Object.keys(oldSourceNodes).filter(id => !newSourceNodes || !newSourceNodes[id]);\n          if (removedNodeIds.length > 0) {\n            // 找出需要删除的变量\n            const inputsToRemove = [];\n            this.nodeData.inputs.forEach((input, index) => {\n              // 检查每个输入变量是否来自被删除的节点\n              for (const nodeId of removedNodeIds) {\n                const oldSourceNode = oldSourceNodes[nodeId];\n                if (oldSourceNode.output && oldSourceNode.output.some(out => out.varname === input.varname)) {\n                  inputsToRemove.push(index);\n                  break;\n                }\n              }\n            });\n            \n            // 从后往前删除变量，避免索引变化的问题\n            for (let i = inputsToRemove.length - 1; i >= 0; i--) {\n              this.nodeData.inputs.splice(inputsToRemove[i], 1);\n            }\n            \n            // 如果删除后没有输入变量了，添加一个空的\n            if (this.nodeData.inputs.length === 0) {\n              this.nodeData.inputs.push({\n                varname: '',\n                type: 'string',\n                txt: ''\n              });\n            }\n            \n            // 保存更改\n            this.saveNode();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div\n    class=\"NodeBox LargeModelNode iconfont\"\n    :class=\"[isSelected ? 'Selected' : '', '']\"\n  >\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-LargeModel\"></span>\n      <span>大语言模型</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">调用大语言模型，处理变量，配合提示词，生成输出</div>\n      <div class=\"LargeModel Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_largemodel ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldLargeModel\"\n          ></span>\n          <span>模型</span>\n        </div>\n        <div v-if=\"isFold_largemodel\">\n          <select v-model=\"nodeData.model.LargeModelID\">\n            <option\n              v-for=\"(item, i) in largeModelList\"\n              :key=\"i\"\n              :value=\"item.LargeModelID\"\n            >\n              {{ item.ModelOrganizationName }}({{ item.Name }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_plugins ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins\"\n          ></span>\n          <span>提示词函数(插件)</span>\n        </div>\n        <div v-if=\"isFold_plugins\">\n          <multiselect\n            v-model=\"nodeData.SemanticFunction\"\n            placeholder=\"请选择函数\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :preserve-search=\"true\"\n            label=\"Name\"\n            track-by=\"Name\"\n            taggable=\"true\"\n            :options=\"pluginsList.filter((value) => value.PluginsType == 1)\"\n          ></multiselect>\n        </div>\n      </div>\n      <div class=\"Plugins Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_plugins2 ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins2\"\n          ></span>\n          <span>原生函数(插件)</span>\n        </div>\n        <div v-if=\"isFold_plugins2\">\n          <multiselect\n            v-model=\"nodeData.NativeFunction\"\n            placeholder=\"请选择函数\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :preserve-search=\"true\"\n            label=\"Name\"\n            track-by=\"Name\"\n            taggable=\"true\"\n            :options=\"pluginsList.filter((value) => value.PluginsType == 2)\"\n          ></multiselect>\n        </div>\n      </div>\n\n      <InputVariables \n      v-model=\"nodeData.inputs\" \n      :textarea=\"$refs.promptTextarea\"\n      :sourceNodes=\"data.sourceNodes\" \n      @save=\"saveNode\" />\n\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词（将输入变量与提示词整理，并让AI重新生成返回结果）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea \n            v-model=\"nodeData.prompt\" \n            ref=\"promptTextarea\"\n            @input=\"handlePromptInput\"\n            :placeholder=\"[\n              '需要将变量拼接在待返回的字符串中：' +\n              nodeData.inputs\n                .filter(item => item.sourceId && item.varname)\n                .map((item) => {\n                  const [nodeId, varname] = item.sourceId.split('_');\n                  return '{{' + item.sourceId + '}}';\n                })\n                .join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Coefficient Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_Coefficient ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkCoefficient\"\n          ></span>\n          <span>系数设置</span>\n        </div>\n        <div v-if=\"isFold_Coefficient\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"随机性(值越大越有创造力)\"\n              ><SliderInput v-model=\"nodeData.temperature\" min=\"0\" max=\"100\"\n            /></el-form-item>\n            <el-form-item label=\"多样性(值越大越有多样性)\"\n              ><SliderInput v-model=\"nodeData.topp\" min=\"0\" max=\"100\"\n            /></el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出变量</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-stop-propagation v-model=\"item.varname\" readonly /></td>\n                <td><input v-stop-propagation v-model=\"item.type\" readonly /></td>\n                <td><input v-stop-propagation v-model=\"item.txt\" @change=\"saveNode\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./LargeModelNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LargeModelNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport InputVariables from '../InputVariables.vue';\n</script>\n<script>\nexport default {\n  name: \"PluginsNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    plugins: Object,\n  },\n  components: {\n    InputVariables\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      pluginsList: this.plugins,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_plugins: true,\n    };\n  },\n  methods: {\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPlugins() {\n      this.isFold_plugins = !this.isFold_plugins;\n    },\n  },\n  watch: {\n    'data.sourceNodes': {\n      handler(newSourceNodes, oldSourceNodes) {\n        // 当sourceNodes发生变化时（比如删除连线）\n        if (oldSourceNodes) {\n          const removedNodeIds = Object.keys(oldSourceNodes).filter(id => !newSourceNodes || !newSourceNodes[id]);\n          if (removedNodeIds.length > 0) {\n            // 找出需要删除的变量\n            const inputsToRemove = [];\n            this.nodeData.inputs.forEach((input, index) => {\n              // 检查每个输入变量是否来自被删除的节点\n              for (const nodeId of removedNodeIds) {\n                const oldSourceNode = oldSourceNodes[nodeId];\n                if (oldSourceNode.output && oldSourceNode.output.some(out => out.varname === input.varname)) {\n                  inputsToRemove.push(index);\n                  break;\n                }\n              }\n            });\n            \n            // 从后往前删除变量，避免索引变化的问题\n            for (let i = inputsToRemove.length - 1; i >= 0; i--) {\n              this.nodeData.inputs.splice(inputsToRemove[i], 1);\n            }\n            \n            // 如果删除后没有输入变量了，添加一个空的\n            if (this.nodeData.inputs.length === 0) {\n              this.nodeData.inputs.push({\n                varname: '',\n                type: 'string',\n                txt: ''\n              });\n            }\n            \n            // 保存更改\n            this.saveNode();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox Plugins iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-Plugins\"></span>\n      <span>插件</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">插件可以提供更多能力，外部操作，获取外部数据等</div>\n      <div class=\"Plugins Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_plugins ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins\"\n          ></span>\n          <span>插件</span>\n        </div>\n        <div v-if=\"isFold_plugins\">\n          <select v-model=\"nodeData.plugins.PluginsID\">\n            <option v-for=\"(item, i) in pluginsList.filter(value =>value.PluginsType==0)\" :key=\"i\" :value=\"item.PluginsID\">\n              {{ item.Name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <InputVariables \n      v-model=\"nodeData.inputs\" \n      :sourceNodes=\"data.sourceNodes\" \n      @save=\"saveNode\" />\n\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n              <td><input v-stop-propagation v-model=\"item.varname\" readonly /></td>\n              <td><input v-stop-propagation v-model=\"item.type\" readonly /></td>\n              <td><input v-stop-propagation v-model=\"item.txt\" @change=\"saveNode\" /></td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./PluginsNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PluginsNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n</script>\n<script>\nexport default {\n  name: \"StartNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox StartNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-start\"></span>\n      <span>开始</span>\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">工作流的起始节点，用于设定启动工作流需要的信息</div>\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-stop-propagation v-model=\"item.varname\" /></td>\n                <td><input v-stop-propagation v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @input=\"handlePromptInput\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '请输入提示词：' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>类型</th>\n              <th>描述</th>\n              <th></th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-stop-propagation v-model=\"item.varname\" /></td>\n                <td><input v-stop-propagation v-model=\"item.type\" readonly /></td>\n                <td><input v-stop-propagation v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./StartNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StartNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport InputVariables from '../InputVariables.vue';\n</script>\n<script>\nexport default {\n  name: \"EndNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  components: {\n    InputVariables\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: {\n        ...this.data,\n        inputs: this.data.inputs || [{\n          varname: '',\n          type: 'string',\n          txt: '',\n          sourceId: ''\n        }],\n        prompt: this.data.prompt || ''\n      },\n      isFold: true,\n      isFold_inputs: true,\n      isFold_prompt: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n  watch: {\n    'data.sourceNodes': {\n      handler(newSourceNodes, oldSourceNodes) {\n        \n        // 当sourceNodes发生变化时（比如删除连线）\n        if (oldSourceNodes) {\n          const removedNodeIds = Object.keys(oldSourceNodes).filter(id => !newSourceNodes || !newSourceNodes[id]);\n          if (removedNodeIds.length > 0) {\n            // 找出需要删除的变量\n            const inputsToRemove = [];\n            this.nodeData.inputs.forEach((input, index) => {\n              // 检查每个输入变量是否来自被删除的节点\n              if (input.sourceId) {\n                const [nodeId] = input.sourceId.split('_');\n                if (removedNodeIds.includes(nodeId)) {\n                  inputsToRemove.push(index);\n                }\n              }\n            });\n\n            // 从后往前删除变量，避免索引变化的问题\n            for (let i = inputsToRemove.length - 1; i >= 0; i--) {\n              this.nodeData.inputs.splice(inputsToRemove[i], 1);\n            }\n\n            // 如果删除后没有输入变量了，添加一个空的\n            if (this.nodeData.inputs.length === 0) {\n              this.nodeData.inputs.push({\n                varname: '',\n                type: 'string',\n                txt: '',\n                sourceId: ''\n              });\n            }\n\n            // 保存更改\n            this.saveNode();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <div class=\"NodeBox EndNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span class=\"Icon fold\" :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\" @click=\"checkFold\"></span>\n      <span class=\"Icon ticon icon-end\"></span>\n      <span>结束</span>\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">工作流的结束节点，用于返回工作流运行后的结果信息</div>\n      <InputVariables \n        v-model=\"nodeData.inputs\" \n        :sourceNodes=\"data.sourceNodes\" \n        :textarea=\"$refs.promptTextarea\"\n        @save=\"saveNode\" \n      />\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"></span>\n          <span>组织返回结果</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea \n            ref=\"promptTextarea\"\n            :value=\"nodeData.prompt\" \n            @mousedown.stop=\"handleRangeMouseDown\" @wheel.stop=\"handleRangeMouseDown\"\n            @input=\"handlePromptInput\"\n            :placeholder=\"[\n              '需要将变量拼接在待返回的字符串中：' +\n              nodeData.inputs\n                .filter(item => item.sourceId && item.varname)\n                .map((item) => {\n                  const [nodeId, varname] = item.sourceId.split('_');\n                  return '{{' + item.sourceId + '}}';\n                })\n                .join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>","import script from \"./EndNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EndNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n\nimport Tools from \"../../common/Tools.js\";\nimport InputVariables from '../InputVariables.vue';\n</script>\n<script>\nexport default {\n  name: \"SelectorNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  components: {\n    InputVariables\n  },\n  created() {\n    // 初始化时确保output存在\n    if (!this.nodeData.output) {\n      this.nodeData.output = [];\n    }\n    this.resetHandleTop();\n    // 初始同步\n    this.syncOutputWithInputs();\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_selector: true,\n      isFold_outputs: true,\n      selectorList: this.data.selector\n        ? this.data.selector.map((item, i) => ({\n          id: item.id || Tools.guid(),\n          inputs: item.inputs || \"2\",\n          comparison: item.comparison || \"\",\n          value: item.value || \"\",\n          varname: item.varname || \"\",\n          top: i * 25 + 240,\n          top_str: \"top:\" + (i * 25 + 240) + \"px\"\n        }))\n        : [],\n      comparison: [\n        { name: \"等于\", data: \"=\", text: \"等于\" },\n        { name: \"不等于\", data: \"!=\", text: \"不等于\" },\n        { name: \"大于\", data: \">\", text: \"大于\" },\n        { name: \"小于\", data: \"<\", text: \"小于\" },\n        { name: \"包含\", data: \"~=\", text: \"包含\" },\n        { name: \"不包含\", data: \"!~=\", text: \"不包含\" },\n      ],\n    };\n  },\n  methods: {\n    resetHandleTop() {\n      // 基础高度：标题 + 描述\n      var baseHeight = 80;\n\n      // 如果主体展开\n      if (this.isFold) {\n        // 加上输入变量标题\n        baseHeight += 40;\n\n        // 如果输入变量展开，加上输入变量表格的高度\n        if (this.isFold_inputs) {\n          // 输入变量表格的基础高度\n          baseHeight += 40; // 表头高度\n          // 每个输入变量行高48px\n          baseHeight += (this.nodeData.inputs?.length || 0) * 48;\n        }\n\n        // 如果选择器展开\n        if (this.isFold_selector) {\n          // 加上条件判断标题和表格头部的高度\n          baseHeight += 80; // 40(标题) + 40(表头)\n\n          // 计算每个选择器的位置\n          this.selectorList = this.selectorList.map((item, i) => {\n            // 每行高度48px（包含padding和border）\n            const top = baseHeight + (i * 48);\n            return {\n              ...item,\n              top: top + 24, // 垂直居中（行高的一半）\n              top_str: \"top:\" + (top + 24) + \"px\"\n            };\n          });\n        } else {\n          // 选择器折叠，只显示标题\n          baseHeight += 40;\n          // 所有连接点位置重置到标题位置\n          this.selectorList = this.selectorList.map(item => ({\n            ...item,\n            top: baseHeight,\n            top_str: \"top:\" + baseHeight + \"px\"\n          }));\n        }\n      } else {\n        // 整个节点折叠，所有连接点位置重置到标题位置\n        baseHeight = 25;\n        this.selectorList = this.selectorList.map(item => ({\n          ...item,\n          top: baseHeight,\n          top_str: \"top:\" + baseHeight + \"px\"\n        }));\n      }\n    },\n    saveNode() {\n      // 确保每个选择器都有正确的数据结构\n      const cleanSelectorList = this.selectorList.map(item => ({\n        id: item.id,\n        inputs: item.inputs,\n        comparison: item.comparison,\n        value: item.value,\n        varname: item.varname\n      }));\n\n      // 同步输出变量\n      this.syncOutputWithInputs();\n\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        selector: cleanSelectorList,\n        label: this.label\n      });\n\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n      /*\n            this.$emit(\"saveNode\", {\n              id: this.id,\n              data: { \n                ...this.nodeData, \n                label: this.label, \n                selector: cleanSelectorList,\n                inputs: this.nodeData.inputs || [], // 确保 inputs 存在\n                output: this.nodeData.output // 已经同步的输出变量\n              },\n            });\n      */\n      // 在数据保存后，等待 DOM 更新完成再重新计算位置\n      this.$nextTick(() => {\n        this.resetHandleTop();\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n      this.resetHandleTop();\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n      this.resetHandleTop();\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldSelector() {\n      this.isFold_selector = !this.isFold_selector;\n      this.resetHandleTop();\n    },\n    onAdd() {\n      // 基础高度计算与resetHandleTop保持一致\n      let baseHeight = 80; // 标题 + 描述\n\n      if (this.isFold) {\n        baseHeight += 40; // 输入变量标题\n\n        if (this.isFold_inputs) {\n          baseHeight += 40; // 输入变量表格标题\n          baseHeight += (this.nodeData.inputs?.length || 0) * 48; // 输入变量表格内容\n        }\n\n        if (this.isFold_selector) {\n          baseHeight += 80; // 条件判断标题 + 表头\n          // 计算新选择器的位置（每行高度48px）\n          const top = baseHeight + (this.selectorList.length * 48);\n\n          const newSelector = {\n            id: Tools.guid(),\n            inputs: \"2\",\n            comparison: \"\",\n            value: \"\",\n            varname: \"\",\n            top: top + 24, // 垂直居中（行高的一半）\n            top_str: \"top:\" + (top + 24) + \"px\"\n          };\n\n          this.selectorList.push(newSelector);\n          this.saveNode();\n        }\n      }\n    },\n    onDel(selector) {\n      this.selectorList = this.selectorList.filter((item) => item.id !== selector.id);\n      this.saveNode();\n    },\n    groupVarnamesBySource() {\n      const varnames = {};\n      if (this.data.sourceNodes) {\n        for (const source of Object.values(this.data.sourceNodes)) {\n          if (source.output) {\n            varnames[source.nodeId] = {\n              label: source.label,\n              variables: source.output.map(output => ({\n                varname: output.varname,\n                sourceId: source.nodeId,\n                displayText: `${output.varname} (${source.label})`\n              }))\n            };\n          }\n        }\n      }\n      return varnames;\n    },\n    syncOutputWithInputs() {\n      if (!this.nodeData.inputs) {\n        this.nodeData.output = [];\n        return;\n      }\n\n      // 创建一个新的output数组，保持引用不变\n      const newOutput = this.nodeData.inputs.map(input => {\n        // sourceId的格式是 \"nodeId_varname\"，需要提取nodeId\n        const nodeId = input.sourceId?.split('_')[0];\n        const sourceNode = nodeId ? this.data.sourceNodes[nodeId] : null;\n        const sourceLabel = sourceNode ? sourceNode.label : 'Unknown';\n\n        // 从sourceNodes中找到对应的输出变量\n        const sourceOutput = sourceNode?.output?.find(out => out.id === input.sourceId);\n\n        return {\n          varname: input.varname,\n          // 显示文本可以根据需要自定义\n          displayText: `${input.varname} (${sourceLabel})`,  // 用于显示\n          type: input.type || 'string',\n          txt: input.txt || '',\n          sourceId: sourceOutput?.id || input.sourceId,  // 用于标识，保持一致性\n          nodeId: nodeId\n        };\n      });\n\n      // 更新output数组\n      this.nodeData.output.length = 0;\n      this.nodeData.output.push(...newOutput);\n    }\n  },\n  watch: {\n    'data.sourceNodes': {\n      handler(newSourceNodes, oldSourceNodes) {\n        // 当sourceNodes发生变化时（比如删除连线）\n        if (oldSourceNodes) {\n          const removedNodeIds = Object.keys(oldSourceNodes).filter(id => !newSourceNodes || !newSourceNodes[id]);\n          if (removedNodeIds.length > 0) {\n            // 找出需要删除的变量\n            const inputsToRemove = [];\n            this.nodeData.inputs.forEach((input, index) => {\n              // 检查每个输入变量是否来自被删除的节点\n              for (const nodeId of removedNodeIds) {\n                const oldSourceNode = oldSourceNodes[nodeId];\n                if (oldSourceNode.output && oldSourceNode.output.some(out => out.varname === input.varname)) {\n                  inputsToRemove.push(index);\n                  break;\n                }\n              }\n            });\n\n            // 从后往前删除变量，避免索引变化的问题\n            for (let i = inputsToRemove.length - 1; i >= 0; i--) {\n              this.nodeData.inputs.splice(inputsToRemove[i], 1);\n            }\n\n            // 如果删除后没有输入变量了，添加一个空的\n            if (this.nodeData.inputs.length === 0) {\n              this.nodeData.inputs.push({\n                varname: '',\n                type: 'string',\n                txt: ''\n              });\n            }\n\n            // 保存更改\n            this.saveNode();\n          }\n        }\n      },\n      deep: true\n    },\n    'nodeData.inputs': {\n      handler() {\n        this.syncOutputWithInputs();\n      },\n      deep: true\n    }\n  },\n};\n</script>\n\n<template>\n  <Handle id=\"target_1\" class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <div v-for=\"item in selectorList\" :key=\"item.id\">\n    <Handle :id=\"item.id\" class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"item.top_str\" />\n  </div>\n  <div class=\"NodeBox SelectorNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span class=\"Icon fold\" :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\" @click=\"checkFold\"></span>\n      <span class=\"Icon ticon icon-selector1\"></span>\n      <span>选择器</span>\n      <input class=\"label\" v-model=\"label\" value=\"{{label}}\" placeholder=\"备注\" @blur=\"saveLabel\" />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">可以通过选择器的定义，链接多个下游执行节点</div>\n      <InputVariables v-model=\"nodeData.inputs\" :sourceNodes=\"data.sourceNodes\" @save=\"saveNode\" />\n      <div class=\"Selector Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_selector ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldSelector\"></span>\n          <span>条件判断</span>\n        </div>\n        <div v-if=\"isFold_selector\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>判断条件</th>\n              <th>比较值</th>\n              <th>删除</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in selectorList\" :key=\"item.id\">\n                <td>\n                  <select v-model=\"item.varname\" class=\"VarnameSelect\">\n                    <option value=\"\" disabled>请选择变量名</option>\n                    <optgroup v-for=\"(group, nodeId) in groupVarnamesBySource()\" :key=\"nodeId\"\n                      :label=\"group.label || nodeId\">\n                      <option v-for=\"varname in group.variables\" :key=\"varname.sourceId\" :value=\"varname.varname\">\n                        {{ varname.displayText }}\n                      </option>\n                    </optgroup>\n                  </select>\n                </td>\n                <td>\n                  <select v-model=\"item.comparison\">\n                    <option v-for=\"_item in comparison\" :key=\"_item.name\" :value=\"_item.data\">\n                      {{ _item.text }}\n                    </option>\n                  </select>\n                </td>\n                <td><input placeholder=\"留空代表字符串空\" v-model=\"item.value\" /></td>\n                <td>\n                  <span class=\"Icon ticon icon-del del\" @click=\"onDel(item)\"></span>\n                </td>\n              </tr>\n            </tbody>\n            <footer>\n              <tr>\n                <td colspan=\"4\" class=\"add\" @click=\"onAdd\">\n                  <span class=\"Icon ticon icon-add\"></span>\n                  <span>增加条件</span>\n                </td>\n              </tr>\n            </footer>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-stop-propagation v-model=\"item.displayText\" readonly /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n","import script from \"./SelectorNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SelectorNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport Multiselect from \"vue-multiselect\";\nimport SliderInput from \"../SliderInput.vue\";\nimport InputVariables from '../InputVariables.vue';\n</script>\n<script>\nexport default {\n  name: \"KnowledgeBaseNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    knowledgeBase: Object,\n    largeModel: Object,\n  },\n  components: { Multiselect, SliderInput,InputVariables },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      largeModelList: this.largeModel,\n      KnowledgeBaseList: this.knowledgeBase,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n      isFold_largemodel: true,\n      isFold_KnowledgeBase: true,\n      isFold_Coefficient: true,\n    };\n  },\n  methods: {\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldLargeModel() {\n      this.isFold_largemodel = !this.isFold_largemodel;\n    },\n    checkFoldKnowledgeBase() {\n      console.log(this.KnowledgeBaseList);\n      this.isFold_KnowledgeBase = !this.isFold_KnowledgeBase;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    checkCoefficient() {\n      this.isFold_Coefficient = !this.isFold_Coefficient;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n  watch: {\n    'data.sourceNodes': {\n      handler(newSourceNodes, oldSourceNodes) {\n        // 当sourceNodes发生变化时（比如删除连线）\n        if (oldSourceNodes) {\n          const removedNodeIds = Object.keys(oldSourceNodes).filter(id => !newSourceNodes || !newSourceNodes[id]);\n          if (removedNodeIds.length > 0) {\n            // 找出需要删除的变量\n            const inputsToRemove = [];\n            this.nodeData.inputs.forEach((input, index) => {\n              // 检查每个输入变量是否来自被删除的节点\n              for (const nodeId of removedNodeIds) {\n                const oldSourceNode = oldSourceNodes[nodeId];\n                if (oldSourceNode.output && oldSourceNode.output.some(out => out.varname === input.varname)) {\n                  inputsToRemove.push(index);\n                  break;\n                }\n              }\n            });\n            \n            // 从后往前删除变量，避免索引变化的问题\n            for (let i = inputsToRemove.length - 1; i >= 0; i--) {\n              this.nodeData.inputs.splice(inputsToRemove[i], 1);\n            }\n            \n            // 如果删除后没有输入变量了，添加一个空的\n            if (this.nodeData.inputs.length === 0) {\n              this.nodeData.inputs.push({\n                varname: '',\n                type: 'string',\n                txt: ''\n              });\n            }\n            \n            // 保存更改\n            this.saveNode();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n};\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.css\"></style>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div\n    class=\"NodeBox KnowledgeBaseNode iconfont\"\n    :class=\"[isSelected ? 'Selected' : '', '']\"\n  >\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-KnowledgeBase\"></span>\n      <span>知识库</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">根据输入的文本，调用知识库，获取知识库数据</div>\n\n      <InputVariables \n      v-model=\"nodeData.inputs\" \n      :textarea=\"$refs.promptTextarea\"\n      :sourceNodes=\"data.sourceNodes\" \n      @save=\"saveNode\" />\n\n      <div class=\"KnowledgeBase Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_KnowledgeBase ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldKnowledgeBase\"\n          ></span>\n          <span>知识库</span>\n        </div>\n        <div v-if=\"isFold_KnowledgeBase\">\n          <multiselect\n            v-model=\"nodeData.knowledgeBase\"\n            placeholder=\"请选择知识库\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :preserve-search=\"true\"\n            label=\"Name\"\n            track-by=\"Name\"\n            taggable=\"true\"\n            :options=\"KnowledgeBaseList\"\n          ></multiselect>\n        </div>\n      </div>\n\n      <div class=\"LargeModel Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_largemodel ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldLargeModel\"\n          ></span>\n          <span>模型</span>\n        </div>\n        <div v-if=\"isFold_largemodel\">\n          <select v-model=\"nodeData.model.LargeModelID\">\n            <option\n              v-for=\"(item, i) in largeModelList\"\n              :key=\"i\"\n              :value=\"item.LargeModelID\"\n            >\n              {{ item.ModelOrganizationName }}({{ item.Name }})\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词（将输入变量与提示词整理，并让AI重新生成返回结果）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea \n            v-model=\"nodeData.prompt\" \n            ref=\"promptTextarea\"\n            @input=\"handlePromptInput\"\n            :placeholder=\"[\n              '需要将变量拼接在待返回的字符串中：' +\n              nodeData.inputs\n                .filter(item => item.sourceId && item.varname)\n                .map((item) => {\n                  const [nodeId, varname] = item.sourceId.split('_');\n                  return '{{' + item.sourceId + '}}';\n                })\n                .join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Coefficient Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_Coefficient ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkCoefficient\"\n          ></span>\n          <span>系数设置</span>\n        </div>\n        <div v-if=\"isFold_Coefficient\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"随机性(值越大越有创造力)\"\n              ><SliderInput v-model=\"nodeData.temperature\" min=\"0\" max=\"100\"\n            /></el-form-item>\n            <el-form-item label=\"多样性(值越大越有多样性)\"\n              ><SliderInput v-model=\"nodeData.topp\" min=\"0\" max=\"100\"\n            /></el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n              <td><input v-model=\"item.varname\" /></td>\n              <td><input v-model=\"item.type\" /></td>\n              <td><input v-stop-propagation v-model=\"item.txt\" @change=\"saveNode\" /></td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>","import script from \"./KnowledgeBaseNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./KnowledgeBaseNode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"vue-multiselect/dist/vue-multiselect.css?vue&type=style&index=0&lang=css&external\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n</script>\n<script>\nexport default {\n  name: \"StartNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox StartNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-start\"></span>\n      <span>开始</span>\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">工作流的起始节点，用于设定启动工作流需要的信息</div>\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_inputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldInputs\"\n          ></span>\n          <span>输入</span>\n        </div>\n        <div v-if=\"isFold_inputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.inputs\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n          ref=\"promptTextarea\"\n            v-model=\"nodeData.prompt\"\n            @input=\"handlePromptInput\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '请输入提示词：' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>显示文本</th>\n              <th>类型</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-stop-propagation v-model=\"item.varname\" readonly /></td>\n                <td><input v-stop-propagation v-model=\"item.type\" readonly /></td>\n                <td><input v-stop-propagation v-model=\"item.txt\" @change=\"saveNode\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./AgentStartNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AgentStartNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport InputVariables from '../InputVariables.vue';\n</script>\n<script>\nexport default {\n  name: \"AgentEndNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  components: {\n    InputVariables\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_prompt: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n\n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n  watch: {\n    'data.sourceNodes': {\n      handler(newSourceNodes, oldSourceNodes) {\n        // 当sourceNodes发生变化时（比如删除连线）\n        if (oldSourceNodes) {\n          const removedNodeIds = Object.keys(oldSourceNodes).filter(id => !newSourceNodes || !newSourceNodes[id]);\n          if (removedNodeIds.length > 0) {\n            // 找出需要删除的变量\n            const inputsToRemove = [];\n            this.nodeData.inputs.forEach((input, index) => {\n              // 检查每个输入变量是否来自被删除的节点\n              for (const nodeId of removedNodeIds) {\n                const oldSourceNode = oldSourceNodes[nodeId];\n                if (oldSourceNode.output && oldSourceNode.output.some(out => out.varname === input.varname)) {\n                  inputsToRemove.push(index);\n                  break;\n                }\n              }\n            });\n\n            // 从后往前删除变量，避免索引变化的问题\n            for (let i = inputsToRemove.length - 1; i >= 0; i--) {\n              this.nodeData.inputs.splice(inputsToRemove[i], 1);\n            }\n\n            // 如果删除后没有输入变量了，添加一个空的\n            if (this.nodeData.inputs.length === 0) {\n              this.nodeData.inputs.push({\n                varname: '',\n                type: 'string',\n                txt: ''\n              });\n            }\n\n            // 保存更改\n            this.saveNode();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <div class=\"NodeBox EndNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span class=\"Icon fold\" :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\" @click=\"checkFold\"></span>\n      <span class=\"Icon ticon icon-end\"></span>\n      <span>结束</span>\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">工作流的结束节点，用于返回工作流运行后的结果信息</div>\n      <InputVariables v-model=\"nodeData.inputs\" :sourceNodes=\"data.sourceNodes\" @save=\"saveNode\"\n        :textarea=\"$refs.promptTextarea\" />\n\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"></span>\n          <span>组织返回结果</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea ref=\"promptTextarea\" v-model=\"nodeData.prompt\" @input=\"handlePromptInput\" v-stop-propagation\n            :placeholder=\"[\n              '需要将变量拼接在待返回的字符串中：' +\n              nodeData.inputs\n                .filter(item => item.sourceId && item.varname)\n                .map((item) => {\n                  const [nodeId, varname] = item.sourceId.split('_');\n                  return '{{' + item.sourceId + '}}';\n                })\n                .join(','),\n            ]\"></textarea>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>","import script from \"./AgentEndNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AgentEndNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\n</script>\n<script>\nexport default {\n  name: \"TimeTriggerNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n  },\n  created() {},\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      isFold: true,\n      isFold_outputs: true,\n      isFold_TimeTrigger: true,\n      isFold_prompt: true,\n\n      loopType: [\n        { name: \"每隔n秒\", data: \"s\", text: \"每n秒\" },\n        { name: \"每隔n天\", data: \"d\", text: \"每n天\" },\n        { name: \"每周星期几\", data: \"w\", text: \"每周星期几\" },\n        { name: \"每月第几日\", data: \"m\", text: \"每月第几日\" },\n      ],\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n      this.resetHandleTop();\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldTimeTrigger() {\n      this.isFold_TimeTrigger = !this.isFold_TimeTrigger;\n      this.resetHandleTop();\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n  },\n};\n</script>\n\n<template>\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div\n    class=\"NodeBox TimeTriggerNode iconfont\"\n    :class=\"[isSelected ? 'Selected' : '', '']\"\n  >\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-TimeTrigger\"></span>\n      <span>时间触发器</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">可以定义一个特定时间点来触发下个节点</div>\n\n      <div class=\"TimeTrigger Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_TimeTrigger ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldTimeTrigger\"\n          ></span>\n          <span>触发周期</span>\n        </div>\n        <div v-if=\"isFold_TimeTrigger\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"循环类型\">\n              <el-select v-model=\"nodeData.timeTrigger.loopType\" placeholder=\"循环类型\">\n                <el-option\n                  v-for=\"_item in loopType\"\n                  :key=\"_item.name\"\n                  :value=\"_item.data\"\n                  :label=\"_item.text\"\n                />\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"周期\">\n              <el-input\n                v-model=\"nodeData.timeTrigger.IntervalValue\"\n                type=\"number\"\n                placeholder=\"循环类型N的值\"\n              />\n            </el-form-item>\n            <el-form-item\n              label=\"第一次开始时间\"\n              title=\"循环类型为日、周、月时该值的时间'hh:mm'为每次循环的开始时间\"\n            >\n              <el-date-picker\n                v-model=\"nodeData.timeTrigger.StartTime\"\n                type=\"datetime\"\n                placeholder=\"选择\"\n                :default-time=\"defaultTime\"\n              />\n            </el-form-item>\n            <el-form-item label=\"执行次数\">\n              <el-input\n                v-model=\"nodeData.timeTrigger.RepeatValue\"\n                type=\"number\"\n                placeholder=\"0等于无限次\"\n              />\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词（将输入变量与提示词整理，作为下个节点的输入参数）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"['请输入提示词：{{currentTime}}']\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"\n          ></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-model=\"item.varname\" /></td>\n                <td><input v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./TimeTrigger.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimeTrigger.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport InputVariables from '../InputVariables.vue';\n</script>\n<script>\nexport default {\n  name: \"AgentNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    agents: Object,\n  },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      agentList: this.agents,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_Agent: true,\n      isFold_prompt: true,\n    };\n  },\n  components: {\n    Handle,\n    InputVariables\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldAgent() {\n      this.isFold_Agent = !this.isFold_Agent;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n  watch: {\n    'data.sourceNodes': {\n      handler(newSourceNodes, oldSourceNodes) {\n        // 当sourceNodes发生变化时（比如删除连线）\n        if (oldSourceNodes) {\n          const removedNodeIds = Object.keys(oldSourceNodes).filter(id => !newSourceNodes || !newSourceNodes[id]);\n          if (removedNodeIds.length > 0) {\n            // 找出需要删除的变量\n            const inputsToRemove = [];\n            this.nodeData.inputs.forEach((input, index) => {\n              // 检查每个输入变量是否来自被删除的节点\n              if (input.sourceId) {\n                const [nodeId] = input.sourceId.split('_');\n                if (removedNodeIds.includes(nodeId)) {\n                  inputsToRemove.push(index);\n                }\n              }\n            });\n\n            // 从后往前删除变量，避免索引变化的问题\n            for (let i = inputsToRemove.length - 1; i >= 0; i--) {\n              this.nodeData.inputs.splice(inputsToRemove[i], 1);\n            }\n\n            // 如果删除后没有输入变量了，添加一个空的\n            if (this.nodeData.inputs.length === 0) {\n              this.nodeData.inputs.push({\n                varname: '',\n                type: 'string',\n                txt: '',\n                sourceId: ''\n              });\n            }\n\n            // 保存更改\n            this.saveNode();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox Agent iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span class=\"Icon fold\" :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\" @click=\"checkFold\"></span>\n      <span class=\"Icon ticon icon-Agent\"></span>\n      <span>Agent</span>\n      <input class=\"label\" v-model=\"label\" value=\"{{label}}\" placeholder=\"备注\" @blur=\"saveLabel\" />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">调用Agent可以实现更多复杂组合</div>\n      <div class=\"Agent Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_Agent ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldAgent\"></span>\n          <span>Agent</span>\n        </div>\n        <div v-if=\"isFold_Agent\">\n          <select v-model=\"nodeData.agent.AgentID\">\n            <option v-for=\"(item, i) in agentList\" :key=\"i\" :value=\"item.AgentID\">\n              {{ item.Name }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n\n      <InputVariables \n      v-model=\"nodeData.inputs\" \n      :textarea=\"$refs.promptTextarea\"\n      :sourceNodes=\"data.sourceNodes\" \n      @save=\"saveNode\" />\n\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"></span>\n          <span>Agent说明(让主控AI更好的理解Agent的作用，并合理安排触发任务)</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea \n          v-model=\"nodeData.prompt\" \n          ref=\"promptTextarea\"\n          @input=\"handlePromptInput\"\n          @mousedown.stop=\"handleRangeMouseDown\" @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '需要将变量拼接在待返回的字符串中：' +\n              nodeData.inputs\n                .filter(item => item.sourceId && item.varname)\n                .map((item) => '{{' + item.sourceId + '}}')\n                .join(','),\n            ]\"></textarea>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>类型</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-stop-propagation v-model=\"item.varname\" readonly /></td>\n                <td><input v-stop-propagation v-model=\"item.type\" readonly /></td>\n                <td><input v-stop-propagation v-model=\"item.txt\" @change=\"saveNode\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>","import script from \"./AgentNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AgentNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { Handle, Position } from \"@vue-flow/core\";\nimport Multiselect from \"vue-multiselect\";\nimport SliderInput from \"../SliderInput.vue\";\nimport InputVariables from '../InputVariables.vue';\n</script>\n<script>\nexport default {\n  name: \"MainAINode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    largeModel: Object,\n    plugins: Object,\n  },\n  components: { Multiselect, SliderInput, InputVariables },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      largeModelList: this.largeModel,\n      pluginsList: this.plugins,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n      isFold_mainAI: true,\n      isFold_plugins: true,\n      isFold_plugins2: true,\n      isFold_Coefficient: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    checkFoldMainAI() {\n      this.isFold_mainAI = !this.isFold_mainAI;\n    },\n    checkFoldPlugins() {\n      this.isFold_plugins = !this.isFold_plugins;\n    },\n    checkFoldPlugins2() {\n      this.isFold_plugins2 = !this.isFold_plugins2;\n    },\n    checkCoefficient() {\n      this.isFold_Coefficient = !this.isFold_Coefficient;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n  watch: {\n    'data.sourceNodes': {\n      handler(newSourceNodes, oldSourceNodes) {\n        // 当sourceNodes发生变化时（比如删除连线）\n        if (oldSourceNodes) {\n          const removedNodeIds = Object.keys(oldSourceNodes).filter(id => !newSourceNodes || !newSourceNodes[id]);\n          if (removedNodeIds.length > 0) {\n            // 找出需要删除的变量\n            const inputsToRemove = [];\n            this.nodeData.inputs.forEach((input, index) => {\n              // 检查每个输入变量是否来自被删除的节点\n              if (input.sourceId) {\n                const [nodeId] = input.sourceId.split('_');\n                if (removedNodeIds.includes(nodeId)) {\n                  inputsToRemove.push(index);\n                }\n              }\n            });\n\n            // 从后往前删除变量，避免索引变化的问题\n            for (let i = inputsToRemove.length - 1; i >= 0; i--) {\n              this.nodeData.inputs.splice(inputsToRemove[i], 1);\n            }\n\n            // 如果删除后没有输入变量了，添加一个空的\n            if (this.nodeData.inputs.length === 0) {\n              this.nodeData.inputs.push({\n                varname: '',\n                type: 'string',\n                txt: '',\n                sourceId: ''\n              });\n            }\n\n            // 保存更改\n            this.saveNode();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n};\n</script>\n<template>\n  <Handle class=\"Handle\" type=\"target\" :position=\"Position.Left\" :style=\"{}\" />\n  <Handle class=\"Handle\" type=\"source\" :position=\"Position.Right\" :style=\"{}\" />\n  <div class=\"NodeBox MainAINode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span class=\"Icon fold\" :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\" @click=\"checkFold\"></span>\n      <span class=\"Icon ticon icon-MainAI\"></span>\n      <span>主控AI</span>\n      <input class=\"label\" v-model=\"label\" value=\"{{label}}\" placeholder=\"备注\" @blur=\"saveLabel\" />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">主导应用的核心AI，可以调用多个Agent</div>\n      <div class=\"LargeModel Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_mainAI ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldMainAI\"></span>\n          <span>模型</span>\n        </div>\n        <div v-if=\"isFold_mainAI\">\n          <select v-model=\"nodeData.model.LargeModelID\">\n            <option v-for=\"(item, i) in largeModelList\" :key=\"i\" :value=\"item.LargeModelID\">\n              {{ item.ModelOrganizationName }}({{ item.Name }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"Inputs Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_plugins ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins\"></span>\n          <span>提示词函数(插件)</span>\n        </div>\n        <div v-if=\"isFold_plugins\">\n          <multiselect v-model=\"nodeData.SemanticFunction\" placeholder=\"请选择函数\" :multiple=\"true\" :close-on-select=\"false\"\n            :clear-on-select=\"false\" :preserve-search=\"true\" label=\"Name\" track-by=\"Name\" taggable=\"true\"\n            :options=\"pluginsList.filter((value) => value.PluginsType == 1)\"></multiselect>\n        </div>\n      </div>\n      <div class=\"Plugins Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_plugins2 ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPlugins2\"></span>\n          <span>原生函数(插件)</span>\n        </div>\n        <div v-if=\"isFold_plugins2\">\n          <multiselect v-model=\"nodeData.NativeFunction\" placeholder=\"请选择函数\" :multiple=\"true\" :close-on-select=\"false\"\n            :clear-on-select=\"false\" :preserve-search=\"true\" label=\"Name\" track-by=\"Name\" taggable=\"true\"\n            :options=\"pluginsList.filter((value) => value.PluginsType == 2)\"></multiselect>\n        </div>\n      </div>\n\n\n      <InputVariables \n      v-model=\"nodeData.inputs\" \n      :textarea=\"$refs.promptTextarea\"\n      :sourceNodes=\"data.sourceNodes\" \n      @save=\"saveNode\" />\n\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"></span>\n          <span>提示词（将输入变量与提示词整理，并让AI重新生成返回结果）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea \n          v-model=\"nodeData.prompt\" \n          ref=\"promptTextarea\"\n          @input=\"handlePromptInput\"\n          @mousedown.stop=\"handleRangeMouseDown\" @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '需要将变量拼接在待返回的字符串中：' +\n              nodeData.inputs\n                .filter(item => item.sourceId && item.varname)\n                .map((item) => '{{' + item.sourceId + '}}')\n                .join(','),\n            ]\"></textarea>\n        </div>\n      </div>\n      <div class=\"Coefficient Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_Coefficient ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkCoefficient\"></span>\n          <span>系数设置</span>\n        </div>\n        <div v-if=\"isFold_Coefficient\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"随机性(值越大越有创造力)\">\n              <SliderInput v-model=\"nodeData.temperature\" min=\"0\" max=\"100\" />\n            </el-form-item>\n            <el-form-item label=\"多样性(值越大越有多样性)\">\n              <SliderInput v-model=\"nodeData.topp\" min=\"0\" max=\"100\" />\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n      <div class=\"Outputs Content\">\n        <div class=\"Title\">\n          <span class=\"Icon fold\" :class=\"[isFold_outputs ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldOutputs\"></span>\n          <span>输出</span>\n        </div>\n        <div v-if=\"isFold_outputs\">\n          <table>\n            <thead>\n              <th>变量名</th>\n              <th>描述</th>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, i) in nodeData.output\" :key=\"i\">\n                <td><input v-stop-propagation v-model=\"item.varname\" /></td>\n                <td><input v-stop-propagation v-model=\"item.txt\" /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>","import script from \"./MainAINode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MainAINode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport SliderInput from \"../SliderInput.vue\";\nimport { Check, Close } from \"@element-plus/icons-vue\";\n</script>\n<script>\nexport default {\n  name: \"ReporterNode\",\n  props: {\n    id: String,\n    isSelected: Boolean,\n    data: Object,\n    largeModel: Object,\n  },\n  components: { SliderInput },\n  data() {\n    return {\n      label: this.data.label,\n      nodeData: this.data,\n      largeModelList: this.largeModel,\n      isFold: true,\n      isFold_inputs: true,\n      isFold_outputs: true,\n      isFold_prompt: true,\n      isFold_largemodel: true,\n      isFold_Coefficient: true,\n    };\n  },\n  methods: {\n    handleRangeMouseDown() {\n      return;\n    },\n    saveNode() {\n      // 使用Object.assign保留原有数据结构\n      const updatedData = Object.assign({}, this.data, {\n        inputs: this.nodeData.inputs,\n        prompt: this.nodeData.prompt,\n        label: this.label\n      });\n      \n      this.$emit(\"saveNode\", {\n        id: this.id,\n        data: updatedData\n      });\n    },\n    saveLabel() {\n      this.saveNode();\n    },\n    checkFold() {\n      this.isFold = !this.isFold;\n    },\n    checkFoldInputs() {\n      this.isFold_inputs = !this.isFold_inputs;\n    },\n    checkFoldOutputs() {\n      this.isFold_outputs = !this.isFold_outputs;\n    },\n    checkFoldPrompt() {\n      this.isFold_prompt = !this.isFold_prompt;\n    },\n    checkFoldLargeModel() {\n      this.isFold_largemodel = !this.isFold_largemodel;\n    },\n    checkCoefficient() {\n      this.isFold_Coefficient = !this.isFold_Coefficient;\n    },\n    handlePromptInput(event) {\n      this.nodeData.prompt = event.target.value;\n      this.saveNode();\n    },\n  },\n};\n</script>\n<template>\n  <div class=\"NodeBox ReporterNode iconfont\" :class=\"[isSelected ? 'Selected' : '', '']\">\n    <div class=\"Title\">\n      <span\n        class=\"Icon fold\"\n        :class=\"[isFold ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n        @click=\"checkFold\"\n      ></span>\n      <span class=\"Icon ticon icon-Reporter\"></span>\n      <span>记录员</span>\n      <input\n        class=\"label\"\n        v-model=\"label\"\n        value=\"{{label}}\"\n        placeholder=\"备注\"\n        @blur=\"saveLabel\"\n      />\n    </div>\n    <div class=\"Content\" v-if=\"isFold\">\n      <div class=\"Description\">\n        调用大语言模型，记录会话内容，并进行必要的摘要与整理，减少回话上下文长度，提高会话质量\n      </div>\n      <div class=\"LargeModel Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_largemodel ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldLargeModel\"\n          ></span>\n          <span>模型</span>\n        </div>\n        <div v-if=\"isFold_largemodel\">\n          <select v-model=\"nodeData.model.LargeModelID\">\n            <option\n              v-for=\"(item, i) in largeModelList\"\n              :key=\"i\"\n              :value=\"item.LargeModelID\"\n            >\n              {{ item.ModelOrganizationName }}({{ item.Name }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"Prompt Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_prompt ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkFoldPrompt\"\n          ></span>\n          <span>提示词（将输入变量与提示词整理，并让AI重新生成返回结果）</span>\n        </div>\n        <div v-if=\"isFold_prompt\">\n          <textarea\n            v-model=\"nodeData.prompt\"\n            @input=\"handlePromptInput\"\n            @mousedown.stop=\"handleRangeMouseDown\"\n            @wheel.stop=\"handleRangeMouseDown\"\n            :placeholder=\"[\n              '请输入提示词：' +\n                nodeData.inputs.map((item) => '{{' + item.varname + '}}').join(','),\n            ]\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"Coefficient Content\">\n        <div class=\"Title\">\n          <span\n            class=\"Icon fold\"\n            :class=\"[isFold_Coefficient ? 'icon-jiantou-d' : 'icon-jiantou-r']\"\n            @click=\"checkCoefficient\"\n          ></span>\n          <span>系数设置</span>\n        </div>\n        <div v-if=\"isFold_Coefficient\">\n          <el-form label-width=\"auto\" style=\"max-width: 600px\" status-icon>\n            <el-form-item label=\"是否启用\">\n              <el-switch\n                v-model=\"nodeData.enable\"\n                class=\"mt-2\"\n                style=\"margin-left: 10px\"\n                inline-prompt\n                :active-icon=\"Check\"\n                :inactive-icon=\"Close\"\n            /></el-form-item>\n            <el-form-item label=\"随机性(值越大越有创造力)\"\n              ><SliderInput v-model=\"nodeData.temperature\" min=\"0\" max=\"100\"\n            /></el-form-item>\n            <el-form-item label=\"多样性(值越大越有多样性)\"\n              ><SliderInput v-model=\"nodeData.topp\" min=\"0\" max=\"100\"\n            /></el-form-item>\n            <el-form-item label=\"每次总结记录数(会话条数)\"\n              ><SliderInput v-model=\"nodeData.recordslength\" min=\"0\" max=\"100\"\n            /></el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import script from \"./ReporterNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReporterNode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { BaseEdge, getBezierPath } from \"@vue-flow/core\";\nimport { computed, defineProps } from \"vue\";\n\nconst props = defineProps({\n  id: {\n    type: String,\n    required: true,\n  },\n  sourceX: {\n    type: Number,\n    required: true,\n  },\n  sourceY: {\n    type: Number,\n    required: true,\n  },\n  targetX: {\n    type: Number,\n    required: true,\n  },\n  targetY: {\n    type: Number,\n    required: true,\n  },\n  sourcePosition: {\n    type: String,\n    required: true,\n  },\n  targetPosition: {\n    type: String,\n    required: true,\n  },\n  data: {\n    type: Object,\n    required: false,\n  },\n  markerEnd: {\n    type: String,\n    required: false,\n  },\n  style: {\n    type: Object,\n    required: false,\n  },\n});\n\nconst path = computed(() => getBezierPath(props));\n</script>\n\n<script>\nexport default {\n  inheritAttrs: false,\n};\n</script>\n\n<template>\n  <BaseEdge\n    :id=\"id\"\n    :style=\"style\"\n    :path=\"path[0]\"\n    :marker-end=\"markerEnd\"\n    :label=\"data.text\"\n    :label-x=\"path[1]\"\n    :label-y=\"path[2]\"\n    :label-style=\"{ fill: 'white' }\"\n    :label-show-bg=\"true\"\n    :label-bg-style=\"{ fill: 'red' }\"\n    :label-bg-padding=\"[2, 4]\"\n    :label-bg-border-radius=\"2\"\n  />\n  <g>\n    <!-- 圆形markStart -->\n    <circle :cx=\"props.sourceX\" :cy=\"props.sourceY\" r=\"4\" fill=\"#29a3ff\" />\n    <!-- path -->\n    <path :d=\"path\" fill=\"none\" stroke=\"#29a3ff\" stroke-width=\"2\" />\n    <!-- 箭头markEnd -->\n    <path\n      :transform=\"transform\"\n      :d=\"`M ${targetX} ${targetY + 2} L ${targetX - 5} ${targetY - 10} L ${\n        targetX + 5\n      } ${targetY - 10} Z`\"\n      fill=\"#3e47de\"\n      stroke=\"none\"\n    />\n  </g>\n</template>\n","import script from \"./CustomEdge.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CustomEdge.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./WorkFlow.vue?vue&type=template&id=639dc9fa\"\nimport script from \"./WorkFlow.vue?vue&type=script&lang=js\"\nexport * from \"./WorkFlow.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\nimport WorkFlow from \"./components/WorkFlow.vue\";\n</script>\n\n<script>\nexport default {\n  name: \"App\",\n  props: {\n    initParams: null,\n  },\n  components: {\n    WorkFlow,\n  },\n  created() {\n    this.parseUrlParams();\n  },\n  methods: {\n    parseUrlParams() {\n      //http://192.168.0.36:8080/?WorkFlowID=2852be70-f006-4af3-bde0-ff6910a2f214&MainID=15c5fb785f4ce8a99717ea85f29690c9&MainType=1\n      //http://192.168.0.36:8080/?WorkFlowID=eab41101-30fd-4727-9ad3-e5f5fabeceea&MainID=020db83fc1d39990448074b97e938b52&MainType=2\n      const urlParams = new URLSearchParams(window.location.search);\n      this.workflow_data.WorkFlowID = urlParams.get(\"WorkFlowID\");\n      this.workflow_data.MainID = urlParams.get(\"MainID\");\n      this.workflow_data.MainType = urlParams.get(\"MainType\");\n      this.baseURL = urlParams.get(\"baseURL\");\n    },\n  },\n  data() {\n    return {\n      baseURL: \"\",\n      workflow_data: {\n        title: \"工作流\",\n        info: null,\n        WorkFlowID: \"\",\n        MainID: \"\",\n        MainType: 2,\n      },\n    };\n  },\n};\n</script>\n\n<template>\n  <WorkFlow :workflow_data=\"workflow_data\" :baseURL=\"baseURL\"></WorkFlow>\n  <notifications />\n</template>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default {\n  mounted(el) {\n    const handleEvent = (e) => {\n      e.stopPropagation();\n    };\n\n    // 找到目标元素（可能是el本身或者其子元素）\n    const targetEl = el.tagName.toLowerCase() === 'select' || el.tagName.toLowerCase() === 'input' \n      ? el \n      : el.querySelector('select, input');\n\n    if (targetEl) {\n      // 添加事件监听\n      targetEl.addEventListener('mousedown', handleEvent);\n      targetEl.addEventListener('wheel', handleEvent);\n      targetEl.addEventListener('keydown', handleEvent);\n      targetEl.addEventListener('keyup', handleEvent);\n      targetEl.addEventListener('input', handleEvent);\n\n      // 保存事件处理函数和目标元素以便在卸载时移除\n      el._stopPropagation = {\n        handler: handleEvent,\n        target: targetEl\n      };\n    }\n  },\n  unmounted(el) {\n    // 清理事件监听\n    if (el._stopPropagation) {\n      const { handler, target } = el._stopPropagation;\n      target.removeEventListener('mousedown', handler);\n      target.removeEventListener('wheel', handler);\n      target.removeEventListener('keydown', handler);\n      target.removeEventListener('keyup', handler);\n      target.removeEventListener('input', handler);\n      delete el._stopPropagation;\n    }\n  }\n};\n","<template>\n  <select\n    @mousedown.stop\n    @wheel.stop\n    v-bind=\"$attrs\"\n    @change=\"$emit('update:modelValue', $event.target.value)\"\n  >\n    <slot></slot>\n  </select>\n</template>\n\n<script>\nexport default {\n  name: 'StopPropagationSelect',\n  inheritAttrs: false,\n  emits: ['update:modelValue']\n};\n</script>\n","import { render } from \"./StopPropagationSelect.vue?vue&type=template&id=25f6b8c2\"\nimport script from \"./StopPropagationSelect.vue?vue&type=script&lang=js\"\nexport * from \"./StopPropagationSelect.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport '@/common/style.scss'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport Notifications from '@kyvg/vue3-notification'\nimport stopPropagation from './directives/stopPropagation';\nimport StopPropagationSelect from './components/common/StopPropagationSelect.vue';\n\nconst workflowParams = window.chatParams || {};\n\nconst app = createApp(App, {\n    initParams: workflowParams\n});\napp.use(ElementPlus)\napp.use(Notifications);\n// 注册全局指令\napp.directive('stop-propagation', stopPropagation);\n// 注册全局组件\napp.component('StopPropagationSelect', StopPropagationSelect);\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkworkflow\"] = self[\"webpackChunkworkflow\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1321); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_VueFlow","ref","nodes","$data","edges","class","_normalizeClass","dark","zoom","onNodesChange","_ctx","onEdgesChange","onEdgeClick","$options","edgeClick","onNodeClick","nodeClick","connectionLineStyle","_withCtx","props","_createVNode","_component_CustomEdge","id","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","data","markerEnd","style","_normalizeStyle","_component_StartNode","isSelected","selected","onSaveNode","saveNode","_component_EndNode","_component_AgentStartNode","_component_AgentEndNode","_component_LargeModelNode","largeModel","largeModelList","plugins","pluginsList","_component_KnowledgeBaseNode","knowledgeBase","knowledgeBaseList","_component_PluginsNode","_component_SelectorNode","_component_TimeTrigger","_component_MainAINode","_component_AgentNode","agents","agentList","_component_ReporterNode","default","_component_Background","gap","_component_WorkFlowData","_component_MiniMap","position","_component_Controls","_component_ControlButton","title","onClick","resetTransform","_component_ToolIcon","name","_","toggleDarkMode","key","logToObject","_component_Panel","_component_WorkFlowInfo","info","_cache","$event","onSave","save","_component_ToolBox","ShowNodeBox","$props","workflow_data","WorkFlowID","MainID","nodeClass","MainType","onAddNode","addNode","onShowNodeBox","apiClient","axios","create","baseURL","headers","ApiService","get","url","then","response","post","config","put","delete","getBaseConfig","this","getWorkFlow","WorkflowID","NodeType","subWorkFlow","Data","getNodeExcutionRecord","workflowID","nodeID","getChatLog","ChatSessionID","Tools","_defineProperty","replace","c","r","Math","random","v","toString","__exports__","_createElementVNode","isVisible","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","NodeList","filter","item","NodeClass","i","Icon","_hoisted_5","_toDisplayString","NodeName","_hoisted_6","_hoisted_4","_createCommentVNode","node","Object","String","mainID","Boolean","Number","Description","methods","Api","res","console","log","Status","$emit","Config","notify","type","text","ErrorDesc","args","$setup","toggleDialog","WorkflowName","Date","LastUpdateTime","toLocaleString","_component_el_dialog","modelValue","dialogFormVisible","width","footer","_component_el_button","closeDialog","_createTextVNode","_component_el_form","model","form","_component_el_form_item","label","_component_el_input","Info","autocomplete","maxlength","setup","onMounted","value","watch","newInfo","immediate","show","min","max","inputValue","onInput","updateValue","target","onMousedown","_withModifiers","handleRangeMouseDown","newValue","disabled","isFold","toggleFold","sourceId","onChange","onVarnameSelect","_hoisted_7","groupVarnamesBySource","group","nodeId","variables","varname","displayText","_hoisted_9","_hoisted_8","readonly","_hoisted_10","removeInput","_hoisted_11","textarea","insertToPrompt","_hoisted_12","addInput","Array","sourceNodes","emits","getAvailableVarnames","currentIndex","availableVarnames","usedSourceIds","map","input","index","entries","forEach","source","output","includes","push","sort","a","b","labelCompare","localeCompare","varnames","groups","selectedSourceId","allVarnames","findIndex","selectedVar","find","txt","newInputs","splice","length","start","selectionStart","end","selectionEnd","substring","dispatchEvent","Event","bubbles","focus","newPosition","setSelectionRange","__default__","components","Multiselect","SliderInput","InputVariables","nodeData","LargeModelID","Name","ModelName","ModelKey","MICON","TypeCode","TypeName","ModelOrganizationID","ModelOrganizationName","EndPoint","MConfig","SystemStatus","inputs","prompt","temperature","topp","SemanticFunction","NativeFunction","isFold_inputs","isFold_outputs","isFold_prompt","isFold_largemodel","isFold_plugins","isFold_plugins2","isFold_Coefficient","updatedData","assign","saveLabel","checkFold","checkFoldInputs","checkFoldOutputs","checkFoldPrompt","checkFoldLargeModel","checkFoldPlugins","checkFoldPlugins2","checkCoefficient","handlePromptInput","event","handler","newSourceNodes","oldSourceNodes","removedNodeIds","keys","inputsToRemove","oldSourceNode","some","out","deep","split","created","resetHandleTop","syncOutputWithInputs","isFold_selector","selectorList","selector","guid","comparison","top","top_str","baseHeight","cleanSelectorList","$nextTick","checkFoldSelector","onAdd","newSelector","onDel","values","newOutput","sourceNode","sourceLabel","sourceOutput","KnowledgeBaseList","isFold_KnowledgeBase","checkFoldKnowledgeBase","isFold_TimeTrigger","loopType","checkFoldTimeTrigger","isFold_Agent","Handle","checkFoldAgent","isFold_mainAI","checkFoldMainAI","inheritAttrs","__props","path","computed","getBezierPath","workflow","VueFlow","Background","MiniMap","ToolBox","WorkFlowInfo","Controls","ToolIcon","ControlButton","WorkFlowData","LargeModelNode","PluginsNode","StartNode","EndNode","AgentStartNode","AgentEndNode","SelectorNode","TimeTrigger","AgentNode","MainAINode","ReporterNode","CustomEdge","KnowledgeBaseNode","onInit","onNodeDragStop","onConnect","addEdges","setViewport","toObject","applyNodeChanges","applyEdgeChanges","useVueFlow","vueFlowInstance","fitView","connection","MarkerType","ArrowClosed","targetNode","outputWithIds","changes","nextChanges","change","selectedNode","edge","e","_setViewport","_toObject","mounted","_this","init","startInterval","unmount","stopInterval","selectEdge","stroke","strokeWidth","intervalId","x","y","nodeObj","setInterval","clearInterval","catch","err","that","Nodes","Edges","$forceUpdate","_WorkFlowID","_Info","_Nodes","NodeID","_Edges","EdgeID","SourceNodeId","TargetNodeId","Condition","LName","_data","render","initParams","WorkFlow","parseUrlParams","urlParams","URLSearchParams","window","location","search","el","handleEvent","stopPropagation","targetEl","tagName","toLowerCase","querySelector","addEventListener","_stopPropagation","unmounted","removeEventListener","_mergeProps","onWheel","$attrs","_renderSlot","$slots","workflowParams","chatParams","app","createApp","App","use","ElementPlus","Notifications","directive","component","StopPropagationSelect","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}